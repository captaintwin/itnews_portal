How to find, install, and manage MCP servers with the GitHub MCP Registry - The GitHub Blog
Learn about artificial intelligence and machine learning across the GitHub ecosystem and the wider industry.
Explore the capabilities and benefits of AI code generation and how it can improve your developer experience.
Resources for developers to grow in their skills and careers.
Learn how to move into your first professional role.
Learn how to start building, shipping, and maintaining software with GitHub.
Get an inside look at how we’re building the home for all developers.
Discover how we deliver a performant and highly available experience across the GitHub platform.
Explore best practices for building software at scale with a majority remote team.
Get a glimpse at the technology underlying the world’s leading AI-powered developer platform.
Learn how we build security into everything we do across the developer lifecycle.
Find out what goes into making GitHub the home for all developers.
How we use GitHub to be more productive, collaborative, and secure
Our engineering and security teams do some incredible work. Let’s take a look at how we use GitHub to be more productive, build collaboratively, and shift security left.
Explore how to write, build, and deploy enterprise software at scale.
Automating your way to faster and more secure ships.
Tips, tools, and tricks to improve developer collaboration.
GitHub recognized as a Leader in the Gartner® Magic Quadrant™ for AI Code Assistants
Learn why Gartner positioned GitHub as a Leader for the second year in a row.
Keep up with what’s new and notable from inside GitHub.
An inside look at news and product updates from GitHub.
The latest on GitHub’s platform, products, and tools.
The latest policy and regulatory changes in software.
Data-driven insights around the developer ecosystem.
Learn how to use retrieval-augmented generation (RAG) to capture more insights.
Organizations worldwide are incorporating open source methodologies into the way they build and ship their own software.
Learn about core challenges in DevSecOps, and how you can start addressing them with AI and automation.
Learn about artificial intelligence and machine learning across the GitHub ecosystem and the wider industry.
Explore the capabilities and benefits of AI code generation and how it can improve your developer experience.
Resources for developers to grow in their skills and careers.
Learn how to move into your first professional role.
Learn how to start building, shipping, and maintaining software with GitHub.
Get an inside look at how we’re building the home for all developers.
Discover how we deliver a performant and highly available experience across the GitHub platform.
Explore best practices for building software at scale with a majority remote team.
Get a glimpse at the technology underlying the world’s leading AI-powered developer platform.
Learn how we build security into everything we do across the developer lifecycle.
Find out what goes into making GitHub the home for all developers.
How we use GitHub to be more productive, collaborative, and secure
Our engineering and security teams do some incredible work. Let’s take a look at how we use GitHub to be more productive, build collaboratively, and shift security left.
Explore how to write, build, and deploy enterprise software at scale.
Automating your way to faster and more secure ships.
Tips, tools, and tricks to improve developer collaboration.
GitHub recognized as a Leader in the Gartner® Magic Quadrant™ for AI Code Assistants
Learn why Gartner positioned GitHub as a Leader for the second year in a row.
Keep up with what’s new and notable from inside GitHub.
An inside look at news and product updates from GitHub.
The latest on GitHub’s platform, products, and tools.
The latest policy and regulatory changes in software.
Data-driven insights around the developer ecosystem.
Learn how to use retrieval-augmented generation (RAG) to capture more insights.
Organizations worldwide are incorporating open source methodologies into the way they build and ship their own software.
Learn about core challenges in DevSecOps, and how you can start addressing them with AI and automation.
How to find, install, and manage MCP servers with the GitHub MCP Registry
Learn how to bring structure and security to your AI ecosystem with the GitHub MCP Registry, the single source of truth for managing and governing MCP servers.
Picture this: you walk into a grocery store and nothing makes sense. The cereal is scattered across three aisles. The milk is hiding in some random cooler near self-checkout. And those produce labels? They haven’t been updated in months.
That’s exactly what discovering Model Context Protocol (MCP) servers felt like. Until now.
MCP is how developers connect tools, APIs, and workflows to their AI systems
. Each MCP server is like an ingredient in your AI stack, whether it’s Playwright for browser automation, Notion for knowledge access, or GitHub’s own MCP server with over a hundred tools.
changes everything by giving you a single, canonical source for discovering, installing, and managing MCP servers right on GitHub.
Here’s what you need to know about finding the right tools for your AI stack, publishing your own servers, and setting up governance for your team.
We’ll also share a few tips and tricks for power users. Let’s go!
You can browse by tags, popularity, or GitHub stars to find the tools you need.
The registry makes installation a one-click experience in
Navigate to Playwright MCP server in the GitHub MCP Registry.
Accept or adjust optional parameters (like storage paths).
That’s it. You’re ready to use Playwright in your agentic workflows.
Remote MCP servers (like GitHub’s) use OAuth during install so you don’t need to manually handle tokens or secrets. Just authenticate once and start building.
"https://github.com/modelcontextprotocol/registry/releases/download/latest/mcp-publisher_$(uname -s | tr '[:upper:]' '[:lower:]')_$(uname -m | sed 's/x86_64/amd64/;s/aarch64/arm64/').tar.gz" | tar xz mcp-publisher && sudo mv mcp-publisher /usr/local/bin/
Navigate to your server’s source directory and run:
"$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
LABEL io.modelcontextprotocol.server.name="io.github.username/server-name"
If successful, your server will be discoverable in the MCP registry. You can verify with:
curl "https://registry.modelcontextprotocol.io/v0/servers?search=io.github.yourname/your-server"
You can automate publishing so every tagged release is published to both your package registry and the MCP registry.
curl -L "https://github.com/modelcontextprotocol/registry/releases/download/latest/mcp-publisher_$(uname -s | tr '[:upper:]' '[:lower:]')_$(uname -m | sed 's/x86_64/amd64/;s/aarch64/arm64/').tar.gz" | tar xz mcp-publisher
# Optional: keep server.json version in sync with git tag
jq --arg v "$VERSION" '.version = $v' server.json > tmp && mv tmp server.json
When you publish, your server shows up in the open source registry and downstream registries (like GitHub’s) automatically pick up updates. No more notifying a dozen different registries every time you ship a new version.
so developers can easily discover your server by category.
Updates propagate automatically downstream—no manual notifications required
If you’re managing MCP usage across a large organization, governance isn’t optional. You need control over which servers your developers can install—especially when those servers interact with sensitive data.
so admins can control which MCP servers are available to developers.
Stand up or connect an internal registry that follows the MCP API spec (registry + HTTP endpoint).
Add vetted MCP servers (internal + external) to your registry.
Point GitHub Enterprise settings to that registry endpoint.
MCP-aware surfaces (starting with VS Code) enforce the allow list automatically.
"name": "internal.mybank.com/mcp-servers/custom-tools",
When developers try to install an MCP server in VS Code, GitHub checks your registry endpoint and only allows installations from your approved list.
This governance model means you can vet partnerships, run security scans, and maintain compliance, all while giving developers access to the tools they need.
Use GitHub’s API or your existing security pipeline to vet MCP servers before adding them to your allow list.
Once you’ve got the basics down, here are some shortcuts to get more out of the registry:
: Use GitHub stars and org verification to quickly assess quality and legitimacy. If a server has thousands of stars and comes from a verified org like Microsoft or HashiCorp, that’s a strong signal.
. This helps you catch issues early without polluting the registry.
: Copilot coding agent comes preloaded with GitHub and Playwright MCP servers. This combo enables auto-generated pull requests with screenshots of web apps, perfect for UI-heavy projects where visual validation matters.
: VS Code is rolling out semantic tool lookups, so your agent won’t flood contexts with 90+ tools. Instead, only the relevant ones surface based on your prompt. This makes working with large MCP servers like GitHub’s much more manageable.
The GitHub MCP Registry is just getting started. Here’s a look at what’s on the horizon—from self-publication to enterprise adoption—so you can see where the ecosystem is heading.
: Expected in the next couple months. This will unlock community-driven growth and make the registry the canonical source for all public MCP servers.
: Other IDEs are coming. The goal is to make MCP server installation seamless regardless of where you write code.
: Governance flows to help unlock MCP usage in regulated industries. Think financial services, healthcare, and other sectors where compliance isn’t negotiable.
: GitHub MCP server will start bundling tools into use-case-driven flows (e.g., “analyze repository + open pull request”) instead of just exposing raw API endpoints. This will make complex workflows feel like simple commands.
The GitHub MCP Registry has 44 servers today and will continue growing (trust us!).
Soon, this registry will become the single source of truth for MCP servers, giving you one place to discover, install, and govern tools without hopping across outdated registries.
The future of AI-assisted development isn’t about coding faster. It’s about orchestrating tools that amplify your impact. And the GitHub MCP Registry is where that orchestration begins.
Andrea is a Senior Developer Advocate at GitHub with over a decade of experience in developer tools. She combines technical depth with a mission to make advanced technologies more accessible. After transitioning from Army service and construction management to software development, she brings a unique perspective to bridging complex engineering concepts with practical implementation. She lives in Florida with her Welsh partner, two sons, and two dogs, where she continues to drive innovation and support open source through GitHub's global initiatives. Find her online @alacolombiadev.
Accelerate developer productivity with these 9 open source AI and MCP projects
GitHub Copilot and VS Code teams, along with the Microsoft Open Source Program Office (OSPO), sponsored these nine open source MCP projects that provide new frameworks, tools, and assistants to unlock AI-native workflows, agentic tooling, and innovation.
Copilot: Faster, smarter, and built for how you work now
Discover how GitHub Copilot has evolved from a high-powered autocomplete tool to a powerful, multi-model agentic assistant.
The road to better completions: Building a faster, smarter GitHub Copilot with a new custom model
Find out about the latest custom models powering the completions experience in GitHub Copilot.
Have you ever thought about using AI to update community health files for your repositories? This blog shares actionable next steps for doing just that, including a starter kit with a checklist and tutorials on how to create three useful files.
Copilot: Faster, smarter, and built for how you work now
Discover how GitHub Copilot has evolved from a high-powered autocomplete tool to a powerful, multi-model agentic assistant.
Everything you need to master GitHub, all in one place.
Build what’s next on GitHub, the place for anyone from anywhere to build anything.
Meet the companies and engineering teams that build with GitHub.
Last chance: Save $700 on your IRL pass to Universe and join us on Oct. 28-29 in San Francisco.
Discover tips, technical guides, and best practices in our biweekly newsletter just for devs.
Yes please, I’d like GitHub and affiliates to use my information for personalized communications, targeted advertising and campaign effectiveness. See the