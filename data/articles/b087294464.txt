Copilot: Faster, smarter, and built for how you work now - The GitHub Blog
Learn about artificial intelligence and machine learning across the GitHub ecosystem and the wider industry.
Explore the capabilities and benefits of AI code generation and how it can improve your developer experience.
Resources for developers to grow in their skills and careers.
Learn how to move into your first professional role.
Learn how to start building, shipping, and maintaining software with GitHub.
Get an inside look at how we’re building the home for all developers.
Discover how we deliver a performant and highly available experience across the GitHub platform.
Explore best practices for building software at scale with a majority remote team.
Get a glimpse at the technology underlying the world’s leading AI-powered developer platform.
Learn how we build security into everything we do across the developer lifecycle.
Find out what goes into making GitHub the home for all developers.
How we use GitHub to be more productive, collaborative, and secure
Our engineering and security teams do some incredible work. Let’s take a look at how we use GitHub to be more productive, build collaboratively, and shift security left.
Explore how to write, build, and deploy enterprise software at scale.
Automating your way to faster and more secure ships.
Tips, tools, and tricks to improve developer collaboration.
GitHub recognized as a Leader in the Gartner® Magic Quadrant™ for AI Code Assistants
Learn why Gartner positioned GitHub as a Leader for the second year in a row.
Keep up with what’s new and notable from inside GitHub.
An inside look at news and product updates from GitHub.
The latest on GitHub’s platform, products, and tools.
The latest policy and regulatory changes in software.
Data-driven insights around the developer ecosystem.
Learn how to use retrieval-augmented generation (RAG) to capture more insights.
Organizations worldwide are incorporating open source methodologies into the way they build and ship their own software.
Learn about core challenges in DevSecOps, and how you can start addressing them with AI and automation.
Learn about artificial intelligence and machine learning across the GitHub ecosystem and the wider industry.
Explore the capabilities and benefits of AI code generation and how it can improve your developer experience.
Resources for developers to grow in their skills and careers.
Learn how to move into your first professional role.
Learn how to start building, shipping, and maintaining software with GitHub.
Get an inside look at how we’re building the home for all developers.
Discover how we deliver a performant and highly available experience across the GitHub platform.
Explore best practices for building software at scale with a majority remote team.
Get a glimpse at the technology underlying the world’s leading AI-powered developer platform.
Learn how we build security into everything we do across the developer lifecycle.
Find out what goes into making GitHub the home for all developers.
How we use GitHub to be more productive, collaborative, and secure
Our engineering and security teams do some incredible work. Let’s take a look at how we use GitHub to be more productive, build collaboratively, and shift security left.
Explore how to write, build, and deploy enterprise software at scale.
Automating your way to faster and more secure ships.
Tips, tools, and tricks to improve developer collaboration.
GitHub recognized as a Leader in the Gartner® Magic Quadrant™ for AI Code Assistants
Learn why Gartner positioned GitHub as a Leader for the second year in a row.
Keep up with what’s new and notable from inside GitHub.
An inside look at news and product updates from GitHub.
The latest on GitHub’s platform, products, and tools.
The latest policy and regulatory changes in software.
Data-driven insights around the developer ecosystem.
Learn how to use retrieval-augmented generation (RAG) to capture more insights.
Organizations worldwide are incorporating open source methodologies into the way they build and ship their own software.
Learn about core challenges in DevSecOps, and how you can start addressing them with AI and automation.
Copilot: Faster, smarter, and built for how you work now
Discover how GitHub Copilot has evolved from a high-powered autocomplete tool to a powerful, multi-model agentic assistant.
first showed up in your editor with that little gray box. It was fast, surprising, and sometimes weird. But it hinted at something bigger: AI could actually
Fast forward to today, and AI is part of our daily workflows. From Cursor to Windsurf and Claude Code to Gemini to OpenAI Codex, there’s no shortage of new tools. And that’s great. Developers need options.
But with 20 million-plus developers across IDEs, the command line, and pull requests, GitHub Copilot is the most-used AI tool among developers
. Devs have used Copilot to accept more than 3 billion code suggestions to date. And every month, Copilot helps deliver millions of code reviews and contribute 1.2 million pull requests, directly inside GitHub.
And because GitHub is where your code already lives (plus your pull requests, reviews, and tests), Copilot doesn’t stop at writing code. It plugs into everything you rely on via the GitHub MCP Server.
) or the loudest. But we’ve been building Copilot since before ChatGPT existed, and we are focused on one purpose: to help developers turn TODOs into committed code. And while some chase the bleeding edge, we know developers don’t want their production code balanced on it.
All that to say: if you tried Copilot early on, things have changed in some pretty big ways.
If 2024 was about showing what’s possible with AI, 2025 is about making it
. Copilot has quietly grown from a neat autocomplete trick into a multi-modal, multi-model assistant that actually understands your projects and helps you move them forward.
After opening up support for multiple models from different providers in 2024,  we’ve been shipping new models almost as fast as they drop from OpenAI’s latest releases to Google’s Gemini 2.0 Flash.
This evolution didn’t happen by accident. Developers told us what worked, what didn’t, and that they wanted more powerful agentic workflows and multi-file editing. So we made that happen.
And that’s just one part of how far Copilot’s come. It’s all part of a bigger goal: making Copilot smarter without you ever needing to install or configure a thing.
Every AI vendor is racing to bolt their agentic tools into GitHub. That’s because agents don’t ship code in a vacuum. They plan tasks, open branches, run tests, and submit pull requests. And all of that already happens on GitHub where developers are collaborating on over 518 million projects.
Since Copilot lives inside the GitHub stack and has native support for GitHub MCP server, its agentic capabilities act on
repository context. It respects branch protections, works within your review cycles, and integrates directly with your CI/CD and security checks.
Over the last year, raw speed and agentic workflows helped define a new crop of AI tools. We took that as a challenge.
Copilot now takes on cross-file tasks, runs commands, refactors entire modules, and suggests terminal operations—all without leaving your editor.
Assign an issue to Copilot, and it drafts a pull request with code, tests, and context from your project. Coding agent now contributes to roughly 1.2 million pull requests per month.
Copilot predicts the next change you’ll make and offers it inline. One Tab and you’re done.
The same brains, now in your terminal. Setup, debug, and script without switching windows.
Different jobs call for different brains. Copilot gives you access to multiple LLMs from leading frontier AI firms.
The result: fewer interruptions, faster loops, and a workflow that finally keeps pace with how you think.
Copilot doesn’t live in a new environment you need to learn. It’s part of the same ecosystem you already use, and scales with it.
Drop a .copilot-instructions.md file in to teach Copilot your naming conventions, test frameworks, comment formats.
Lets any AI tool securely access your GitHub context (pull requests, issues, actions) without leaving GitHub.
Reusable blueprints for consistent prompts across teams.
Every Copilot update compounds through the world’s largest network of real developer data (and feedback).
Copilot isn’t a separate tool you “add” to GitHub. It’s part of what makes GitHub a full-stack development platform. Other tools might help you code; Copilot helps you build, test, secure, and ship.
Fast is nice. Correct is better (ask us how we know). We’ve spent a lot of cycles quietly leveling up Copilot’s overall code quality and security guardrails where they matter most to you.
Detects and patches vulnerabilities automatically (it was used to fix over a million vulnerabilities this year alone).
Summarizes diffs, flags logic bugs, and suggests fixes right inside your pull requests with a tool that powers millions of code reviews a month on GitHub.
Generates more readable, test-passing code with fewer lint errors and less regressions.
Enterprise isolation, audit logs, and tenant-level control mean your work stays off the grid.
Our research shows new code written with Copilot tends to have higher readability, better reliability, and improved maintainability scores.
Here’s the good news: Copilot’s backed by the same security stack that protects the world’s largest open source ecosystem and more than 90% of Fortune 100 companies.
Let’s be honest: there are some great tools out there that make agentic coding workflows feel intuitive and bring real polish to multi-file editing.
Copilot lives in GitHub. That means it’s close to everything else you do, whether it’s your pull requests, GitHub Actions workflows, or CI/CD pipelines. Every day, GitHub powers over
Other tools might help you write code faster. But Copilot helps you ship better software.
Your pull requests, reviews, tests, and workflows are part of the same conversation.
Copilot brings AI assistance to real-world delivery.
of news. From smarter agent workflows to deeper multi-model integration and next-gen security features, we’re building what’s next for how software gets built.
Because our goal hasn’t changed. We’re here to help every developer commit code faster instead of chasing TODOs.
Ashley Willis is the Senior Director of Developer Relations at GitHub, where she leads with a deep commitment to open source, community, and care. A longtime advocate for developers, Ashley has built a career around making technology more human, supporting contributors, amplifying underrepresented voices, and building resilient teams. Her work sits at the intersection of leadership, advocacy, and accessibility, with a focus on creating tools and spaces that genuinely serve the people who use them.
The road to better completions: Building a faster, smarter GitHub Copilot with a new custom model
Find out about the latest custom models powering the completions experience in GitHub Copilot.
Have you ever thought about using AI to update community health files for your repositories? This blog shares actionable next steps for doing just that, including a starter kit with a checklist and tutorials on how to create three useful files.
How to find, install, and manage MCP servers with the GitHub MCP Registry
Learn how to bring structure and security to your AI ecosystem with the GitHub MCP Registry, the single source of truth for managing and governing MCP servers.
The road to better completions: Building a faster, smarter GitHub Copilot with a new custom model
Find out about the latest custom models powering the completions experience in GitHub Copilot.
Have you ever thought about using AI to update community health files for your repositories? This blog shares actionable next steps for doing just that, including a starter kit with a checklist and tutorials on how to create three useful files.
Everything you need to master GitHub, all in one place.
Build what’s next on GitHub, the place for anyone from anywhere to build anything.
Meet the companies and engineering teams that build with GitHub.
Last chance: Save $700 on your IRL pass to Universe and join us on Oct. 28-29 in San Francisco.
Discover tips, technical guides, and best practices in our biweekly newsletter just for devs.
Yes please, I’d like GitHub and affiliates to use my information for personalized communications, targeted advertising and campaign effectiveness. See the