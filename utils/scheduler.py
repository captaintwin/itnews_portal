import json
from datetime import datetime, timedelta
from pathlib import Path
from core.logger import log


SCHEDULE_FILE = Path("data/schedule.json")


def build_schedule(news_count: int, start_hour: int = 5, end_hour: int = 22):
    """
    –°–æ–∑–¥–∞—ë—Ç —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–π –º–µ–∂–¥—É start_hour –∏ end_hour.
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ data/schedule.json.
    """
    if news_count <= 0:
        log.warning("‚ö†Ô∏è –ù–µ—Ç –Ω–æ–≤–æ—Å—Ç–µ–π –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è.")
        return []

    # –Ω–∞—á–∞–ª–æ –∏ –∫–æ–Ω–µ—Ü –¥–Ω—è
    today = datetime.now()
    start_time = today.replace(hour=start_hour, minute=0, second=0, microsecond=0)
    end_time = today.replace(hour=end_hour, minute=0, second=0, microsecond=0)

    # –µ—Å–ª–∏ —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è —É–∂–µ –ø–æ–∑–∂–µ —Å—Ç–∞—Ä—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ —Ä—É—á–Ω–æ–º –∑–∞–ø—É—Å–∫–µ)
    if datetime.now() > start_time:
        start_time = datetime.now() + timedelta(minutes=5)

    total_minutes = (end_time - start_time).total_seconds() / 60
    interval = total_minutes / news_count

    schedule = []
    for i in range(news_count):
        t = start_time + timedelta(minutes=i * interval)
        schedule.append(t.strftime("%H:%M"))

    SCHEDULE_FILE.parent.mkdir(parents=True, exist_ok=True)
    with open(SCHEDULE_FILE, "w", encoding="utf-8") as f:
        json.dump(schedule, f, ensure_ascii=False, indent=2)

    first_time, last_time = schedule[0], schedule[-1]
    log.info(
        f"üïí –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ: {news_count} –ø—É–±–ª–∏–∫–∞—Ü–∏–π "
        f"—Å {first_time} –¥–æ {last_time} (–∏–Ω—Ç–µ—Ä–≤–∞–ª ~{interval:.1f} –º–∏–Ω)"
    )

    return schedule
