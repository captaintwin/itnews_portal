
from core.logger import log
from sources.collector import collect_all
from utils.article_extractor import extract_all_articles
from utils.reporter import send_report
from utils.analyzer import analyze_articles


if __name__ == "__main__":
    log.info("üöÄ –ó–∞–ø—É—Å–∫ –ø–∞–π–ø–ª–∞–π–Ω–∞ —Å–±–æ—Ä–∞ –∏ –∞–Ω–∞–ª–∏–∑–∞ –Ω–æ–≤–æ—Å—Ç–µ–π")

    # 1Ô∏è‚É£ –°–±–æ—Ä –Ω–æ–≤–æ—Å—Ç–µ–π
    news = collect_all()
    if not news:
        log.warning("‚ö†Ô∏è –ù–æ–≤–æ—Å—Ç–∏ –Ω–µ —Å–æ–±—Ä–∞–Ω—ã ‚Äî –≤—ã—Ö–æ–¥–∏–º.")
        exit()

    # 2Ô∏è‚É£ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤ —Å—Ç–∞—Ç–µ–π
    extract_all_articles()

    # 3Ô∏è‚É£ –ê–Ω–∞–ª–∏–∑ (–≤—ã–±–æ—Ä —Ç–æ–ø-3 –ø–æ –∫–∞–∂–¥–æ–º—É –∏—Å—Ç–æ—á–Ω–∏–∫—É)
    selected = analyze_articles(top_n=3)

    # 4Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á—ë—Ç–∞ –≤ Telegram
    send_report(selected)

    # 5Ô∏è‚É£ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) –ü—É–±–ª–∏–∫–∞—Ü–∏—è —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç–∞—Ç—å–∏
    # post_next()

    log.info("‚úÖ –í—Å–µ —à–∞–≥–∏ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã.")
